{"version":3,"sources":["component/Welcome.js","lib/isAuth.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","Grid","container","item","direction","alignItems","justify","style","padding","minHeight","Typography","variant","Welcome","userType","localStorage","getItem","isAuth","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","props","classes","history","useHistory","handleClick","location","console","log","push","AppBar","position","Toolbar","className","Button","color","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","type","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","inputBox","width","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","Logout","useEffect","removeItem","FileUploadInput","file","setFile","uploadPercentage","setUploadPercentage","xs","height","icon","display","files","name","InputProps","readOnly","FormData","append","disabled","CloudUpload","marginTop","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","uploadTo","identifier","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","updatedDetails","trim","handleLogin","substr","verified","handleLoginRecruiter","button","jobTileOuter","margin","boxSizing","popupDialog","justifyContent","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","minWidth","marginBottom","_id","headers","Authorization","Home","setJobs","getData","address","get","today","textAlign","statusBlock","textTransform","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","background","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","fullWidth","alignSelf","Profile","profileDetails","setProfileDetails","edu","onAdd","chip","onDelete","index","splice","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","MyJobs","queryString","join","avatar","colorSet","updateStatus","statusData","buttonSet","Avatar","src","jobApplicant","JobApplications","useParams","all","sort","desc","searchOptions","searchParams","asc","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","paddingTop","createContext","App","popup","Provider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmBaA,EAAY,WACvB,OACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXC,QAAQ,SACRC,MAAO,CAAEC,QAAS,OAAQC,UAAW,QANvC,SAQE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAMOC,EAlCC,WACd,OACE,cAACX,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXC,QAAQ,SACRC,MAAO,CAAEC,QAAS,OAAQC,UAAW,QANvC,SAQE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,wC,2BCTKE,EAAW,WACtB,OAAOC,aAAaC,QAAQ,SAGfC,EARA,WACb,OAAOF,aAAaC,QAAQ,UCUxBE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OA2ECK,EAvEA,SAACC,GACd,IAAMC,EAAUX,IACZY,EAAUC,cAERC,EAAc,SAACC,GACnBC,QAAQC,IAAIF,GACZH,EAAQM,KAAKH,IAGf,OACE,cAACI,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC5B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAWX,EAAQH,MAA5C,wBAGCT,IACgB,cAAfH,IACE,qCACE,cAAC2B,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,UAAnD,kBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,YAAnD,sBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,YAAnD,qBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,eAAnD,uBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,aAAnD,qBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,YAAnD,uBAKF,qCACE,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,UAAnD,kBAGA,cAACS,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAMX,EAAY,kBAF7B,0BAMA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,aAAnD,qBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,YAAnD,uBAMJ,qCACE,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,WAAnD,mBAGA,cAACS,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMX,EAAY,YAAnD,6B,4HC3BGY,EA7CO,SAAChB,GAAW,IAAD,EACSiB,oBAAS,GADlB,mBACxBC,EADwB,KACVC,EADU,KAW/B,OACE,mCACE,eAACC,EAAA,EAAD,CAAapC,QAAQ,WAAWqC,MAAOrB,EAAMqB,MAAQrB,EAAMqB,MAAQ,KAAnE,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,8BAApB,SACGvB,EAAMwB,QAET,cAACC,EAAA,EAAD,CACEC,GAAG,8BACHC,KAAMT,EAAe,OAAS,WAC9BU,aACE,cAACC,EAAA,EAAD,CAAgBnB,SAAS,MAAzB,SACE,cAACoB,EAAA,EAAD,CACEf,QApBa,WACzBI,GAAiBD,IAoBLa,YAjBkB,SAACC,GAC/BA,EAAMC,kBAiBMC,KAAK,MAHP,SAKGhB,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIvCiB,MAAOnC,EAAMmC,MACbC,SAAU,SAACJ,GAAD,OAAWhC,EAAMoC,SAASJ,IACpCK,WAAYrC,EAAMqC,WAAarC,EAAMqC,WAAa,GAClDzB,UAAWZ,EAAMY,UACjB0B,OAAQtC,EAAMsC,OAAStC,EAAMsC,OAAS,OAEvCtC,EAAMuC,WACL,cAACC,EAAA,EAAD,UAAiBxC,EAAMuC,aACrB,W,SCTGE,EAxCI,SAACzC,GAAW,IAE3BwB,EAOExB,EAPFwB,MACAW,EAMEnC,EANFmC,MACAC,EAKEpC,EALFoC,SACAM,EAIE1C,EAJF0C,kBACAC,EAGE3C,EAHF2C,iBACAC,EAEE5C,EAFF4C,SACAhC,EACEZ,EADFY,UAGF,OACE,cAACiC,EAAA,EAAD,CACErB,MAAOA,EACPxC,QAAQ,WACRmD,MAAOA,EACPC,SAAUA,EACVG,WAAYG,EAAkBI,MAAMC,QACpCT,OAAQ,SAACN,GACP,GAA2B,KAAvBA,EAAMgB,OAAOb,MACXS,EACFD,EAAiB,SAAS,EAAM,qBAEhCA,EAAiB,SAAS,EAAO,QAE9B,CACM,wJACJM,KAAKC,OAAOlB,EAAMgB,OAAOb,OAAOgB,eACrCR,EAAiB,SAAS,EAAO,IAEjCA,EAAiB,SAAS,EAAM,4BAItCtB,MAAOqB,EAAkBI,MAAMzB,MAC/BT,UAAWA,KCrCJwC,EAAS,wBAcPC,EAZC,CACdC,MAAM,GAAD,OAAKF,EAAL,eACLG,OAAO,GAAD,OAAKH,EAAL,gBACNI,aAAa,GAAD,OAAKJ,EAAL,kBACZK,mBAAmB,GAAD,OAAKL,EAAL,mBAClBM,KAAK,GAAD,OAAKN,EAAL,aACJO,aAAa,GAAD,OAAKP,EAAL,qBACZQ,OAAO,GAAD,OAAKR,EAAL,eACNS,KAAK,GAAD,OAAKT,EAAL,aACJU,WAAW,GAAD,OAAKV,EAAL,oBCON9D,EAAYC,aAAW,iBAAO,CAClCwE,KAAM,CACJlF,QAAS,aAEXmF,SAAU,CACRC,MAAO,SAETC,aAAc,CACZD,MAAO,aAyHIE,EArHD,WACZ,IAAMlE,EAAUX,IACV8E,EAAWC,qBAAWC,IAFV,EAIcrD,mBAAS5B,KAJvB,mBAIXkF,EAJW,KAIDC,EAJC,OAMsBvD,mBAAS,CAC/C6B,MAAO,GACP2B,SAAU,KARM,mBAMXC,EANW,KAMGC,EANH,OAWgC1D,mBAAS,CACzD6B,MAAO,CACLzB,OAAO,EACP0B,QAAS,IAEX0B,SAAU,CACRpD,OAAO,EACP0B,QAAS,MAlBK,mBAWXL,EAXW,KAWQkC,EAXR,KAsBZC,EAAc,SAACC,EAAK3C,GACxBwC,EAAgB,2BACXD,GADU,kBAEZI,EAAM3C,MAiDX,OAAOoC,EACL,cAAC,IAAD,CAAUQ,GAAG,MAEb,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGrE,UAAWX,EAAQ8D,KAAxC,SACE,eAACzF,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASoB,QAAS,EAAGnB,WAAW,SAA1D,UACE,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKkG,UAAU,KAAnC,qBAIF,cAAC5G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,EAAD,CACEgD,MAAM,QACNW,MAAOuC,EAAa5B,MACpBV,SAAU,SAACJ,GAAD,OAAW6C,EAAY,QAAS7C,EAAMgB,OAAOb,QACvDO,kBAAmBA,EACnBC,iBA7De,SAACmC,EAAKK,EAAQpC,GACrC6B,EAAqB,2BAChBlC,GADe,kBAEjBoC,EAAM,CACLzD,MAAO8D,EACPpC,QAASA,OAyDLnC,UAAWX,EAAQ+D,aAGvB,cAAC1F,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,EAAD,CACEgD,MAAM,WACNW,MAAOuC,EAAaD,SACpBrC,SAAU,SAACJ,GAAD,OAAW6C,EAAY,WAAY7C,EAAMgB,OAAOb,QAC1DvB,UAAWX,EAAQ+D,aAGvB,cAAC1F,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNC,QAAS,WAlECqE,OAAOC,KAAK3C,GAAmB4C,MAAK,SAACC,GACrD,OAAO7C,EAAkB6C,GAAKlE,SAyB9B+C,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,oBAzBX2C,IACGC,KAAKtC,EAAQC,MAAOoB,GACpBkB,MAAK,SAACC,GACL1G,aAAa2G,QAAQ,QAASD,EAASE,KAAKC,OAC5C7G,aAAa2G,QAAQ,OAAQD,EAASE,KAAKpE,MAC3C6C,EAAYnF,KACZ+E,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,2BAEXzC,QAAQC,IAAIsF,MAEbI,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,cA4CdjF,UAAWX,EAAQiE,aAJrB,2BClHKiC,EAdA,SAACnG,GACd,IAAMoE,EAAWC,qBAAWC,IAU5B,OATA8B,qBAAU,WACRjH,aAAakH,WAAW,SACxBlH,aAAakH,WAAW,QACxBjC,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,8BAEV,IACI,cAAC,IAAD,CAAUgC,GAAG,Y,qHCsDPuB,GAjES,SAACtG,GAAW,IAAD,EAETiB,mBAAS,IAFA,mBAE1BsF,EAF0B,KAEpBC,EAFoB,OAGevF,mBAAS,GAHxB,mBAG1BwF,EAH0B,KAGRC,EAHQ,KAWjC,OACE,eAACpI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,GAAIlI,UAAU,SAASmC,UAAWZ,EAAMY,UAAjE,UACE,eAACtC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,GAAI9G,QAAS,EAAtC,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,eAAC9F,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNoE,UAAU,QACVtG,MAAO,CAAEqF,MAAO,OAAQ2C,OAAQ,QAJlC,UAMG5G,EAAM6G,KACP,uBACElF,KAAK,OACL/C,MAAO,CAAEkI,QAAS,QAClB1E,SAAU,SAACJ,GACT1B,QAAQC,IAAIyB,EAAMgB,OAAO+D,OACzBL,EAAoB,GACpBF,EAAQxE,EAAMgB,OAAO+D,MAAM,YAKnC,cAACzI,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAOxB,EAAMwB,MACbW,MAAOoE,GAAOA,EAAKS,MAAa,GAChCC,WAAY,CACVC,UAAU,GAEZlI,QAAQ,WACRJ,MAAO,CAAEqF,MAAO,YAGpB,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9F,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNlC,MAAO,CAAEqF,MAAO,OAAQ2C,OAAQ,QAChC7F,QAAS,kBA3CjBT,QAAQC,IAAIgG,QACC,IAAIY,UACZC,OAAO,OAAQb,IA0CZc,UAAUd,EALZ,SAOE,cAACe,GAAA,EAAD,WAIgB,IAArBb,EACC,cAACnI,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,GAAI/H,MAAO,CAAE2I,UAAW,QAAvC,SACE,cAACC,GAAA,EAAD,CAAgBxI,QAAQ,cAAcmD,MAAOsE,MAE7C,SCvCJnH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJlF,QAAS,aAEXmF,SAAU,CACRC,MAAO,SAETC,aAAc,CACZD,MAAO,aAILwD,GAAkB,SAACzH,GACvB,IAAMC,EAAUX,KACRoI,EAA4B1H,EAA5B0H,UAAWC,EAAiB3H,EAAjB2H,aAEnB,OACE,qCACGD,EAAUE,KAAI,SAACrC,EAAKT,GAAN,OACb,eAACxG,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTqC,UAAWX,EAAQ+D,SAEnBpF,MAAO,CAAEiJ,YAAa,EAAGC,aAAc,GALzC,UAOE,cAACxJ,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAK,4BAAuBsD,EAAM,GAClC3C,MAAOuF,EAAU5C,GAAKiD,gBACtB3F,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKiD,gBAAkB/F,EAAMgB,OAAOb,MAC3CwF,EAAaK,IAEfhJ,QAAQ,eAGZ,cAACV,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAM,aACNW,MAAOoD,EAAI0C,UACXjJ,QAAQ,WACR2C,KAAK,SACLS,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKmD,UAAYjG,EAAMgB,OAAOb,MACrCwF,EAAaK,QAInB,cAAC1J,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAM,WACNW,MAAOoD,EAAI2C,QACXlJ,QAAQ,WACR2C,KAAK,SACLS,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKoD,QAAUlG,EAAMgB,OAAOb,MACnCwF,EAAaK,UArCdlD,MA2CT,cAACxG,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNC,QAAS,kBACP4G,EAAa,GAAD,mBACPD,GADO,CAEV,CACEK,gBAAiB,GACjBE,UAAW,GACXC,QAAS,QAIftH,UAAWX,EAAQ+D,SAbrB,mDAmYOG,GA7WD,SAACnE,GACb,IAAMC,EAAUX,KACV8E,EAAWC,qBAAWC,IAFL,EAISrD,mBAAS5B,KAJlB,mBAIhBkF,EAJgB,KAINC,EAJM,OAMmBvD,mBAAS,CACjDU,KAAM,YACNmB,MAAO,GACP2B,SAAU,GACVuC,KAAM,GACNU,UAAW,GACXS,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,IAAK,GACLC,cAAe,KAhBM,mBAMhBC,EANgB,KAMDC,EANC,OAmBGxH,mBAAS,IAnBZ,mBAmBhByH,EAnBgB,KAmBTC,EAnBS,OAqBW1H,mBAAS,CACzC,CACE8G,gBAAiB,GACjBE,UAAW,GACXC,QAAS,MAzBU,mBAqBhBR,EArBgB,KAqBLC,EArBK,OA6B2B1G,mBAAS,CACzD6B,MAAO,CACL8F,WAAW,EACXhG,UAAU,EACVvB,OAAO,EACP0B,QAAS,IAEX0B,SAAU,CACRmE,WAAW,EACXhG,UAAU,EACVvB,OAAO,EACP0B,QAAS,IAEXiE,KAAM,CACJ4B,WAAW,EACXhG,UAAU,EACVvB,OAAO,EACP0B,QAAS,MA9CU,mBA6BhBL,EA7BgB,KA6BGkC,EA7BH,KAkDjBC,EAAc,SAACC,EAAK3C,GACxBsG,EAAiB,2BACZD,GADW,kBAEb1D,EAAM3C,MAILQ,EAAmB,SAACmC,EAAKK,EAAQpC,GACrC6B,EAAqB,2BAChBlC,GADe,kBAEjBoC,EAAM,CACLlC,UAAU,EACVgG,WAAW,EACXvH,MAAO8D,EACPpC,QAASA,OA8If,OAAOwB,EACL,cAAC,IAAD,CAAUQ,GAAG,MAEb,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGrE,UAAWX,EAAQ8D,KAAxC,SACE,eAACzF,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASoB,QAAS,EAAGnB,WAAW,SAA1D,UACE,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKkG,UAAU,KAAnC,sBAIF,cAAC5G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACqE,EAAA,EAAD,CACEgG,QAAM,EACNrH,MAAM,WACNxC,QAAQ,WACR4B,UAAWX,EAAQ+D,SACnB7B,MAAOqG,EAAc7G,KACrBS,SAAU,SAACJ,GACT6C,EAAY,OAAQ7C,EAAMgB,OAAOb,QAPrC,UAUE,cAAC2G,EAAA,EAAD,CAAU3G,MAAM,YAAhB,uBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAM,YAAhB,4BAGJ,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,OACNW,MAAOqG,EAAcxB,KACrB5E,SAAU,SAACJ,GAAD,OAAW6C,EAAY,OAAQ7C,EAAMgB,OAAOb,QACtDvB,UAAWX,EAAQ+D,SACnB3C,MAAOqB,EAAkBsE,KAAK3F,MAC9BkB,WAAYG,EAAkBsE,KAAKjE,QACnCT,OAAQ,SAACN,GACoB,KAAvBA,EAAMgB,OAAOb,MACfQ,EAAiB,QAAQ,EAAM,oBAE/BA,EAAiB,QAAQ,EAAO,KAGpC3D,QAAQ,eAGZ,cAACV,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,EAAD,CACEgD,MAAM,QACNW,MAAOqG,EAAc1F,MACrBV,SAAU,SAACJ,GAAD,OAAW6C,EAAY,QAAS7C,EAAMgB,OAAOb,QACvDO,kBAAmBA,EACnBC,iBAAkBA,EAClB/B,UAAWX,EAAQ+D,SACnBpB,UAAU,MAGd,cAACtE,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,EAAD,CACEgD,MAAM,WACNW,MAAOqG,EAAc/D,SACrBrC,SAAU,SAACJ,GAAD,OAAW6C,EAAY,WAAY7C,EAAMgB,OAAOb,QAC1DvB,UAAWX,EAAQ+D,SACnB3C,MAAOqB,EAAkB+B,SAASpD,MAClCkB,WAAYG,EAAkB+B,SAAS1B,QACvCT,OAAQ,SAACN,GACoB,KAAvBA,EAAMgB,OAAOb,MACfQ,EAAiB,YAAY,EAAM,wBAEnCA,EAAiB,YAAY,EAAO,SAKpB,cAAvB6F,EAAc7G,KACb,qCACE,cAAC,GAAD,CACE+F,UAAWA,EACXC,aAAcA,IAEhB,cAACrJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,SACNxC,QAAQ,WACRuD,WAAW,4BACXH,SAAU,SAAC2G,GAAD,OACRN,EAAiB,2BAAKD,GAAN,IAAqBL,OAAQY,UAInD,cAACzK,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,gBACNqF,KAAM,cAAC,IAAD,IACNmC,SAAU3F,EAAQG,aAClBqB,YAAaA,EACboE,WAAY,aAGhB,cAAC3K,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,4BACNqF,KAAM,cAAC,IAAD,IACNmC,SAAU3F,EAAQI,mBAClBoB,YAAaA,EACboE,WAAY,iBAKlB,qCACE,cAAC3K,EAAA,EAAD,CAAME,MAAI,EAACI,MAAO,CAAEqF,MAAO,QAA3B,SACE,cAACpB,EAAA,EAAD,CACErB,MAAM,uBACN0H,WAAS,EACTC,KAAM,EACNvK,MAAO,CAAEqF,MAAO,QAChBjF,QAAQ,WACRmD,MAAOqG,EAAcF,IACrBlG,SAAU,SAACJ,GAEPA,EAAMgB,OAAOb,MAAMiH,MAAM,KAAKC,QAAO,SAAUC,GAC7C,MAAa,KAANA,KACNC,QAAU,KAEb1E,EAAY,MAAO7C,EAAMgB,OAAOb,YAKxC,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,KAAD,CACEgL,QAAS,KACTrH,MAAOuG,EACPtG,SAAU,SAACsG,GAAD,OAAWC,EAASD,WAMtC,cAACpK,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNC,QAAS,WACgB,cAAvByH,EAAc7G,KA1RN,WAClB,IAAM8H,EAAkB,GACxBrE,OAAOC,KAAK3C,GAAmBgH,SAAQ,SAACnE,GAClC7C,EAAkB6C,GAAK3C,UAAYF,EAAkB6C,GAAKqD,UAC5Da,EAAgBlE,GAAO,CACrB3C,UAAU,EACVgG,WAAW,EACXvH,OAAO,EACP0B,QAAQ,GAAD,OAAKwC,EAAI,GAAGoE,cAAZ,iBAGTF,EAAgBlE,GAAO7C,EAAkB6C,MAI7CjF,QAAQC,IAAImH,GAEZ,IAAIkC,EAAc,2BACbpB,GADa,IAEhBd,UAAWA,EACR2B,QAAO,SAAC9D,GAAD,MAAwC,KAA/BA,EAAIwC,gBAAgB8B,UACpCjC,KAAI,SAACrC,GAIJ,MAHuB,KAAnBA,EAAG,gBACEA,EAAG,QAELA,OAIbkD,EAAiBmB,GAECxE,OAAOC,KAAKoE,GAAiBnE,MAAK,SAACC,GACnD,OAAOkE,EAAgBlE,GAAKlE,UA0B5BuD,EAAqB6E,GACrBrF,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,qBA1BX2C,IACGC,KAAKtC,EAAQE,OAAQqG,GACrBhE,MAAK,SAACC,GACL1G,aAAa2G,QAAQ,QAASD,EAASE,KAAKC,OAC5C7G,aAAa2G,QAAQ,OAAQD,EAASE,KAAKpE,MAC3C6C,EAAYnF,KACZ+E,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,2BAEXzC,QAAQC,IAAIsF,MAEbI,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,aAoORiE,GAxNa,WAC3B,IAAML,EAAkB,GACxBrE,OAAOC,KAAK3C,GAAmBgH,SAAQ,SAACnE,GAClC7C,EAAkB6C,GAAK3C,UAAYF,EAAkB6C,GAAKqD,UAC5Da,EAAgBlE,GAAO,CACrB3C,UAAU,EACVgG,WAAW,EACXvH,OAAO,EACP0B,QAAQ,GAAD,OAAKwC,EAAI,GAAGoE,cAAgBpE,EAAIwE,OAAO,GAAvC,iBAGTN,EAAgBlE,GAAO7C,EAAkB6C,MAI7C,IAAIqE,EAAc,eACbpB,GAGHoB,EADY,KAAVlB,EACY,2BACTF,GADS,IAEZD,cAAc,IAAD,OAAMG,KAGP,2BACTF,GADS,IAEZD,cAAe,KAInBE,EAAiBmB,GAEjB,IAAMI,GAAY5E,OAAOC,KAAKoE,GAAiBnE,MAAK,SAACC,GACnD,OAAOkE,EAAgBlE,GAAKlE,SAG9Bf,QAAQC,IAAIqJ,GAERI,EACFtE,IACGC,KAAKtC,EAAQE,OAAQqG,GACrBhE,MAAK,SAACC,GACL1G,aAAa2G,QAAQ,QAASD,EAASE,KAAKC,OAC5C7G,aAAa2G,QAAQ,OAAQD,EAASE,KAAKpE,MAC3C6C,EAAYnF,KACZ+E,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,2BAEXzC,QAAQC,IAAIsF,MAEbI,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,cAGpBjB,EAAqB6E,GACrBrF,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,qBAwJCkH,IAENrJ,UAAWX,EAAQiE,aARrB,4B,8BC3bJ5E,GAAYC,aAAW,iBAAO,CAClCwE,KAAM,CACJ6C,OAAQ,WAEVsD,OAAQ,CACNjG,MAAO,OACP2C,OAAQ,QAEVuD,aAAc,CACZtL,QAAS,OACTuL,OAAQ,SACRC,UAAW,aACXpG,MAAO,QAETqG,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,cAIdC,GAAU,SAACxK,GACf,IAAMC,EAAUX,KACRmL,EAAQzK,EAARyK,IACFrG,EAAWC,qBAAWC,IAHH,EAKDrD,oBAAS,GALR,mBAKlBuE,EALkB,KAKZkF,EALY,OAMHzJ,mBAAS,IANN,mBAMlB0J,EANkB,KAMbC,EANa,KAQnBC,EAAc,WAClBH,GAAQ,GACRE,EAAO,KAqCHE,EAAW,IAAIC,KAAKN,EAAIK,UAAUE,qBAExC,OACE,eAAChG,EAAA,EAAD,CAAOpE,UAAWX,EAAQkK,aAAclF,UAAW,EAAnD,UACE,eAAC3G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,EAAG9G,QAAS,EAAGpB,UAAU,SAAlD,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0ByL,EAAI3K,UAEhC,cAACxB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyM,GAAA,EAAD,CAAQ9I,OAAuB,IAAhBsI,EAAI7G,OAAgB6G,EAAI7G,OAAS,KAAMsD,UAAQ,MAEhE,eAAC5I,EAAA,EAAD,CAAME,MAAI,EAAV,oBAAmBiM,EAAIS,WACvB,eAAC5M,EAAA,EAAD,CAAME,MAAI,EAAV,6BAA6BiM,EAAIU,OAAjC,gBACA,eAAC7M,EAAA,EAAD,CAAME,MAAI,EAAV,uBACa,IACO,IAAjBiM,EAAIW,SAAJ,UAAwBX,EAAIW,SAA5B,wBAEH,eAAC9M,EAAA,EAAD,CAAME,MAAI,EAAV,yBAAwBiM,EAAIY,UAAUrE,QACtC,eAAC1I,EAAA,EAAD,CAAME,MAAI,EAAV,oCAAmCsM,KAEnC,cAACxM,EAAA,EAAD,CAAME,MAAI,EAAV,SACGiM,EAAIa,UAAU1D,KAAI,SAAC2D,GAAD,OACjB,cAACC,GAAA,EAAD,CAAMhK,MAAO+J,EAAO3M,MAAO,CAAEgB,YAAa,iBAIhD,cAACtB,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9F,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNF,UAAWX,EAAQiK,OACnBnJ,QAAS,WACP2J,GAAQ,IAEVrD,SAAyB,cAAfnI,IAPZ,wBAaJ,cAACuM,GAAA,EAAD,CAAOjG,KAAMA,EAAMkG,QAASb,EAAajK,UAAWX,EAAQqK,YAA5D,SACE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACmE,EAAA,EAAD,CACErB,MAAM,6BACN0H,WAAS,EACTC,KAAM,EACNvK,MAAO,CAAEqF,MAAO,OAAQ6H,aAAc,QACtC9M,QAAQ,WACRmD,MAAOwI,EACPvI,SAAU,SAACJ,GAEPA,EAAMgB,OAAOb,MAAMiH,MAAM,KAAKC,QAAO,SAAUC,GAC7C,MAAa,KAANA,KACNC,QAAU,KAEbqB,EAAO5I,EAAMgB,OAAOb,UAI1B,cAACtB,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,kBA3GjBT,QAAQC,IAAIkK,EAAIsB,KAChBzL,QAAQC,IAAIoK,QACZjF,IACGC,KADH,UAEOtC,EAAQK,KAFf,YAEuB+G,EAAIsB,IAF3B,iBAGI,CACEpB,IAAKA,GAEP,CACEqB,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAInDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzB8H,OAED5E,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,UAChBzB,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7B8H,QA0EE,6BAiGKqB,GAlFF,WAAO,IAAD,EACOjL,mBAAS,IADhB,mBACVyC,EADU,KACJyI,EADI,KAGX/H,EAAWC,qBAAWC,IAC5B8B,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd,IAAIC,EAAUhJ,EAAQK,KACtB2I,EAAO,UAAMA,GAEb3G,IACG4G,IAAID,EAAS,CACZL,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBoG,EACEtG,EAASE,KAAKsD,QAAO,SAAC9D,GACpB,IAAMgH,EAAQ,IAAIxB,KAElB,OADiB,IAAIA,KAAKxF,EAAIuF,UACZyB,SAIvBtG,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cAKjB,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTE,UAAU,SACVE,QAAQ,SACRD,WAAW,SALb,SAOE,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBAIJ,cAACV,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJmI,IAAE,EACFlI,UAAU,SACVC,WAAW,UACXC,QAAQ,SANV,SAQG+E,EAAK6F,OAAS,EACb7F,EAAKkE,KAAI,SAAC6C,GACR,OAAO,cAAC,GAAD,CAASA,IAAKA,OAGvB,cAAC1L,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAE4N,UAAW,UAA7C,mCCpONlN,GAAYC,aAAW,iBAAO,CAClCwE,KAAM,CACJ6C,OAAQ,WAEV6F,YAAa,CACXxI,MAAO,OACP2C,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,SAChBmC,cAAe,aAEjBvC,aAAc,CACZtL,QAAS,OACTuL,OAAQ,SACRC,UAAW,aACXpG,MAAO,QAETqG,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,cAIdoC,GAAkB,SAAC3M,GACvB,IAAMC,EAAUX,KACRsN,EAAgB5M,EAAhB4M,YACFxI,EAAWC,qBAAWC,IAHK,EAITrD,oBAAS,GAJA,mBAI1BuE,EAJ0B,KAIpBkF,EAJoB,OAKLzJ,mBAAS2L,EAAYnC,IAAI7G,QALpB,mBAK1BA,EAL0B,KAKlBiJ,EALkB,KAO3BC,EAAY,IAAI/B,KAAK6B,EAAYG,mBACjCC,EAAW,IAAIjC,KAAK6B,EAAYK,eAEhCC,EAAc,WAClBxH,IACG4G,IADH,UACUjJ,EAAQO,OADlB,eAC+BgJ,EAAYnC,IAAIsB,KAAO,CAClDC,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLgH,EAAUhH,EAASE,KAAKnC,QACxBtD,QAAQC,IAAIsF,EAASE,SAEtBE,OAAM,SAACC,GAEN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cAoDjB,OACE,eAACiC,EAAA,EAAD,CAAOpE,UAAWX,EAAQkK,aAAclF,UAAW,EAAnD,UACE,eAAC3G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,EAAG9G,QAAS,EAAGpB,UAAU,SAAlD,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B4N,EAAYnC,IAAI3K,UAE5C,eAACxB,EAAA,EAAD,CAAME,MAAI,EAAV,wBAAuBoO,EAAYvB,UAAUrE,QAC7C,eAAC1I,EAAA,EAAD,CAAME,MAAI,EAAV,oBAAmBoO,EAAYnC,IAAIS,WACnC,eAAC5M,EAAA,EAAD,CAAME,MAAI,EAAV,6BAA6BoO,EAAYnC,IAAIU,OAA7C,gBACA,eAAC7M,EAAA,EAAD,CAAME,MAAI,EAAV,uBACa,IACmB,IAA7BoO,EAAYnC,IAAIW,SAAhB,UACMwB,EAAYnC,IAAIW,SADtB,wBAIH,cAAC9M,EAAA,EAAD,CAAME,MAAI,EAAV,SACGoO,EAAYnC,IAAIa,UAAU1D,KAAI,SAAC2D,GAAD,OAC7B,cAACC,GAAA,EAAD,CAAMhK,MAAO+J,EAAO3M,MAAO,CAAEgB,YAAa,cAG9C,eAACtB,EAAA,EAAD,CAAME,MAAI,EAAV,yBAAwBsO,EAAU9B,wBACV,aAAvB4B,EAAYzH,QACU,aAAvByH,EAAYzH,OACV,eAAC7G,EAAA,EAAD,CAAME,MAAI,EAAV,wBAAuBwO,EAAShC,wBAC9B,QAEN,eAAC1M,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASkI,GAAI,EAA5C,UACE,cAACrI,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC3B,EAAA,EAAD,CACEpE,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WA1CG,CACfC,QAAS,UACTC,YAAa,UACbC,SAAU,UACVC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,SAAU,WAmCuBd,EAAYzH,QACjCrE,MAAO,WAJX,SAOG8L,EAAYzH,WAGO,aAAvByH,EAAYzH,QACU,aAAvByH,EAAYzH,OACV,cAAC7G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNF,UAAWX,EAAQwM,YACnB1L,QAAS,WACPmM,IACAxC,GAAQ,IANZ,wBAYA,WAGR,cAACe,GAAA,EAAD,CAAOjG,KAAMA,EAAMkG,QAvEH,WAClBhB,GAAQ,IAsEmC9J,UAAWX,EAAQqK,YAA5D,SACE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACuM,GAAA,EAAD,CACEjE,KAAK,oBACLpI,MAAO,CAAEkN,aAAc,QACvB3J,OAAmB,IAAZyB,EAAgB,KAAOA,EAC9BxB,SAAU,SAACJ,EAAO2L,GAChBd,EAAUc,MAGd,cAAC9M,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,WA/HjB2E,IACGkI,IACCvK,EAAQO,OACR,CAAEA,OAAQA,EAAQiK,MAAOjB,EAAYnC,IAAIsB,KACzC,CACEC,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAInDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,gCAEXmK,IACAxC,GAAQ,MAETzE,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,GACZ9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BmK,IACAxC,GAAQ,OA+FN,6BAgFKoD,GAlEM,WACnB,IAAM1J,EAAWC,qBAAWC,IADH,EAEerD,mBAAS,IAFxB,mBAElB0C,EAFkB,KAEJoK,EAFI,KAIzB3H,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd1G,IACG4G,IAAIjJ,EAAQM,aAAc,CACzBqI,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBgI,EAAgBlI,EAASE,SAE1BE,OAAM,SAACC,GAEN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cAKjB,OACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,cAACV,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJmI,IAAE,EACFlI,UAAU,SACVG,MAAO,CAAEqF,MAAO,QAChBvF,WAAW,UACXC,QAAQ,SAPV,SASGgF,EAAa4F,OAAS,EACrB5F,EAAaiE,KAAI,SAACrC,GAAD,OACf,cAACjH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAiBoO,YAAarH,SAIlC,cAACxG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAE4N,UAAW,UAA7C,yCC3PJlN,GAAYC,aAAW,iBAAO,CAClCwE,KAAM,CACJ6C,OAAQ,WAEV0D,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,cAId9C,GAAkB,SAACzH,GACvB,IAAMC,EAAUX,KACRoI,EAA4B1H,EAA5B0H,UAAWC,EAAiB3H,EAAjB2H,aAEnB,OACE,qCACGD,EAAUE,KAAI,SAACrC,EAAKT,GAAN,OACb,eAACxG,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACqC,UAAWX,EAAQ+D,SAAxC,UACE,cAAC1F,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAK,4BAAuBsD,EAAM,GAClC3C,MAAOuF,EAAU5C,GAAKiD,gBACtB3F,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKiD,gBAAkB/F,EAAMgB,OAAOb,MAC3CwF,EAAaK,IAEfhJ,QAAQ,WACRgP,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAM,aACNW,MAAOoD,EAAI0C,UACXjJ,QAAQ,WACR2C,KAAK,SACLS,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKmD,UAAYjG,EAAMgB,OAAOb,MACrCwF,EAAaK,QAInB,cAAC1J,EAAA,EAAD,CAAME,MAAI,EAACmI,GAAI,EAAf,SACE,cAAC9D,EAAA,EAAD,CACErB,MAAM,WACNW,MAAOoD,EAAI2C,QACXlJ,QAAQ,WACR2C,KAAK,SACLS,SAAU,SAACJ,GACT,IAAMgG,EAAM,YAAON,GACnBM,EAAOlD,GAAKoD,QAAUlG,EAAMgB,OAAOb,MACnCwF,EAAaK,UApCkClD,MA0CzD,cAACxG,EAAA,EAAD,CAAME,MAAI,EAACI,MAAO,CAAEqP,UAAW,UAA/B,SACE,cAACpN,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNC,QAAS,kBACP4G,EAAa,GAAD,mBACPD,GADO,CAEV,CACEK,gBAAiB,GACjBE,UAAW,GACXC,QAAS,QAIftH,UAAWX,EAAQ+D,SAbrB,mDA8NOkK,GAxMC,SAAClO,GACf,IAAMC,EAAUX,KACV8E,EAAWC,qBAAWC,IAFH,EAGDrD,oBAAS,GAHR,mBAGZyJ,GAHY,aAKmBzJ,mBAAS,CACnD+F,KAAM,GACNU,UAAW,GACXS,OAAQ,GACRC,OAAQ,GACRC,QAAS,KAVc,mBAKlB8F,EALkB,KAKFC,EALE,OAaSnN,mBAAS,CACzC,CACE8G,gBAAiB,GACjBE,UAAW,GACXC,QAAS,MAjBY,mBAalBR,EAbkB,KAaPC,EAbO,KAqBnB9C,EAAc,SAACC,EAAK3C,GACxBiM,EAAkB,2BACbD,GADY,kBAEdrJ,EAAM3C,MAIXiE,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd1G,IACG4G,IAAIjJ,EAAQQ,KAAM,CACjBmI,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBqI,EAAkBvI,EAASE,MACvBF,EAASE,KAAK2B,UAAU6B,OAAS,GACnC5B,EACE9B,EAASE,KAAK2B,UAAUE,KAAI,SAACyG,GAAD,MAAU,CACpCtG,gBAAiBsG,EAAItG,gBAAkBsG,EAAItG,gBAAkB,GAC7DE,UAAWoG,EAAIpG,UAAYoG,EAAIpG,UAAY,GAC3CC,QAASmG,EAAInG,QAAUmG,EAAInG,QAAU,WAK5CjC,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cA6CjB,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEF,cAACV,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,eAAC3B,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChB7L,WAAY,UAPhB,UAUE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASC,WAAW,UAAUmB,QAAS,EAAjE,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,OACNW,MAAOgM,EAAenH,KACtB5E,SAAU,SAACJ,GAAD,OAAW6C,EAAY,OAAQ7C,EAAMgB,OAAOb,QACtDvB,UAAWX,EAAQ+D,SACnBhF,QAAQ,WACRgP,WAAS,MAGb,cAAC,GAAD,CACEtG,UAAWA,EACXC,aAAcA,IAEhB,cAACrJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,SACNxC,QAAQ,WACRuD,WAAW,4BACXJ,MAAOgM,EAAehG,OACtBmG,MAAO,SAACC,GAAD,OACLH,EAAkB,2BACbD,GADY,IAEfhG,OAAO,GAAD,mBAAMgG,EAAehG,QAArB,CAA6BoG,QAGvCC,SAAU,SAACD,EAAME,GACf,IAAItG,EAASgG,EAAehG,OAC5BA,EAAOuG,OAAOD,EAAO,GACrBL,EAAkB,2BACbD,GADY,IAEfhG,OAAQA,MAGZ6F,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,gBACNqF,KAAM,cAAC,IAAD,IACNmC,SAAU3F,EAAQG,aAClBqB,YAAaA,EACboE,WAAY,aAGhB,cAAC3K,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,4BACNqF,KAAM,cAAC,IAAD,IACNmC,SAAU3F,EAAQI,mBAClBoB,YAAaA,EACboE,WAAY,iBAIlB,cAACpI,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,YAAa0I,UAAW,QAC1CxG,QAAS,kBA/HA,WACnBT,QAAQC,IAAImH,GAEZ,IAAIkC,EAAc,2BACbuE,GADa,IAEhBzG,UAAWA,EACR2B,QAAO,SAAC9D,GAAD,MAAwC,KAA/BA,EAAIwC,gBAAgB8B,UACpCjC,KAAI,SAACrC,GAIJ,MAHuB,KAAnBA,EAAG,gBACEA,EAAG,QAELA,OAIbG,IACGkI,IAAIvK,EAAQQ,KAAM+F,EAAgB,CACjCoC,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBqJ,OAEDnG,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,aAEpB6E,GAAQ,GA0FiBiE,IAJjB,uCC/QNrP,GAAYC,aAAW,iBAAO,CAClCwE,KAAM,CACJ6C,OAAQ,WAEV0D,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,cA2OLqE,GAvOI,WACjB,IAAM3O,EAAUX,KACV8E,EAAWC,qBAAWC,IAFL,EAIarD,mBAAS,CAC3CnB,MAAO,GACP+O,cAAe,IACfC,aAAc,GACdhE,SAAU,IAAIC,MAAK,IAAIA,MAAOgE,UAAY,OACvCC,cACH1D,UAAW,GACXJ,QAAS,YACTE,SAAU,EACVD,OAAQ,IAba,mBAIhB8D,EAJgB,KAIJC,EAJI,KAgBjBrK,EAAc,SAACC,EAAK3C,GACxB+M,EAAc,2BACTD,GADQ,kBAEVnK,EAAM3C,MAwCX,OACE,mCACE,eAAC7D,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,OAAQmF,MAAO,IALtD,UAOE,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEF,cAACV,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACoI,IAAE,EAAClI,UAAU,SAASE,QAAQ,SAAnD,SACE,cAACL,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACwG,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChB7L,WAAY,UAPhB,UAUE,eAACJ,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVC,WAAW,UACXmB,QAAS,EAJX,UAME,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,QACNW,MAAO8M,EAAWnP,MAClBsC,SAAU,SAACJ,GAAD,OACR6C,EAAY,QAAS7C,EAAMgB,OAAOb,QAEpCnD,QAAQ,WACRgP,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CACEoC,UAAWX,EAAQ+D,SACnBxC,MAAM,SACNxC,QAAQ,WACRuD,WAAW,4BACXJ,MAAO8M,EAAW3D,UAClBgD,MAAO,SAACC,GAAD,OACLW,EAAc,2BACTD,GADQ,IAEX3D,UAAU,GAAD,mBAAM2D,EAAW3D,WAAjB,CAA4BiD,QAGzCC,SAAU,SAACD,EAAME,GACf,IAAInD,EAAY2D,EAAW3D,UAC3BA,EAAUoD,OAAOD,EAAO,GACxBS,EAAc,2BACTD,GADQ,IAEX3D,UAAWA,MAGf0C,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACqE,EAAA,EAAD,CACEgG,QAAM,EACNrH,MAAM,WACNxC,QAAQ,WACRmD,MAAO8M,EAAW/D,QAClB9I,SAAU,SAACJ,GACT6C,EAAY,UAAW7C,EAAMgB,OAAOb,QAEtC6L,WAAS,EARX,UAUE,cAAClF,EAAA,EAAD,CAAU3G,MAAM,YAAhB,uBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAM,YAAhB,uBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAM,iBAAhB,iCAGJ,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAACqE,EAAA,EAAD,CACEgG,QAAM,EACNrH,MAAM,WACNxC,QAAQ,WACRmD,MAAO8M,EAAW7D,SAClBhJ,SAAU,SAACJ,GACT6C,EAAY,WAAY7C,EAAMgB,OAAOb,QAEvC6L,WAAS,EARX,UAUE,cAAClF,EAAA,EAAD,CAAU3G,MAAO,EAAjB,sBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,qBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,sBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,sBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,sBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,sBACA,cAAC2G,EAAA,EAAD,CAAU3G,MAAO,EAAjB,2BAGJ,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,SACNG,KAAK,SACL3C,QAAQ,WACRmD,MAAO8M,EAAW9D,OAClB/I,SAAU,SAACJ,GACT6C,EAAY,SAAU7C,EAAMgB,OAAOb,QAErC8E,WAAY,CAAEkI,WAAY,CAAEC,IAAK,IACjCpB,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,uBACNG,KAAK,iBACLQ,MAAO8M,EAAWnE,SAClB1I,SAAU,SAACJ,GACT6C,EAAY,WAAY7C,EAAMgB,OAAOb,QAEvCkN,gBAAiB,CACfC,QAAQ,GAEVtQ,QAAQ,WACRgP,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,+BACNG,KAAK,SACL3C,QAAQ,WACRmD,MAAO8M,EAAWJ,cAClBzM,SAAU,SAACJ,GACT6C,EAAY,gBAAiB7C,EAAMgB,OAAOb,QAE5C8E,WAAY,CAAEkI,WAAY,CAAEC,IAAK,IACjCpB,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,sBACNG,KAAK,SACL3C,QAAQ,WACRmD,MAAO8M,EAAWH,aAClB1M,SAAU,SAACJ,GACT6C,EAAY,eAAgB7C,EAAMgB,OAAOb,QAE3C8E,WAAY,CAAEkI,WAAY,CAAEC,IAAK,IACjCpB,WAAS,SAIf,cAACnN,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,YAAa0I,UAAW,QAC1CxG,QAAS,kBAnMrBT,QAAQC,IAAI0O,QACZvJ,IACGC,KAAKtC,EAAQK,KAAMuL,EAAY,CAC9BjD,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBmM,EAAc,CACZpP,MAAO,GACP+O,cAAe,IACfC,aAAc,GACdhE,SAAU,IAAIC,MAAK,IAAIA,MAAOgE,UAAY,OACvCC,cACH1D,UAAW,GACXJ,QAAS,YACTE,SAAU,EACVD,OAAQ,OAGXlF,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,cAgKV,qCCjORvG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJ6C,OAAQ,WAEVsD,OAAQ,CACNjG,MAAO,OACP2C,OAAQ,QAEVuD,aAAc,CACZtL,QAAS,OACTuL,OAAQ,SACRC,UAAW,aACXpG,MAAO,QAETqG,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,UAElBkC,YAAa,CACXxI,MAAO,OACP2C,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,SAChBmC,cAAe,iBAIblC,GAAU,SAACxK,GACf,IAAMC,EAAUX,KACZY,EAAUC,cACNsK,EAAiBzK,EAAjByK,IAAK2B,EAAYpM,EAAZoM,QACPhI,EAAWC,qBAAWC,IAJH,EAMDrD,oBAAS,GANR,mBAMlBuE,EANkB,KAMZkF,EANY,OAOWzJ,oBAAS,GAPpB,mBAOlBsO,EAPkB,KAONC,EAPM,OAQWvO,mBAASwJ,GARpB,mBAQlBwE,EARkB,KAQNC,EARM,KAUzB5O,QAAQC,IAAI0O,GAEZ,IAAMpK,EAAc,SAACC,EAAK3C,GACxB+M,EAAc,2BACTD,GADQ,kBAEVnK,EAAM3C,MAQL0I,EAAc,WAClBH,GAAQ,IAGJ+E,EAAoB,WACxBD,GAAc,IA0DVE,EAAW,IAAI3E,KAAKN,EAAIkF,eAE9B,OACE,eAAC3K,EAAA,EAAD,CAAOpE,UAAWX,EAAQkK,aAAclF,UAAW,EAAnD,UACE,eAAC3G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,EAAG9G,QAAS,EAAGpB,UAAU,SAAlD,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0ByL,EAAI3K,UAEhC,cAACxB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyM,GAAA,EAAD,CAAQ9I,OAAuB,IAAhBsI,EAAI7G,OAAgB6G,EAAI7G,OAAS,KAAMsD,UAAQ,MAEhE,eAAC5I,EAAA,EAAD,CAAME,MAAI,EAAV,oBAAmBiM,EAAIS,WACvB,eAAC5M,EAAA,EAAD,CAAME,MAAI,EAAV,6BAA6BiM,EAAIU,OAAjC,gBACA,eAAC7M,EAAA,EAAD,CAAME,MAAI,EAAV,uBACa,IACO,IAAjBiM,EAAIW,SAAJ,UAAwBX,EAAIW,SAA5B,wBAEH,eAAC9M,EAAA,EAAD,CAAME,MAAI,EAAV,8BAA6BkR,EAAS1E,wBACtC,eAAC1M,EAAA,EAAD,CAAME,MAAI,EAAV,mCAAkCiM,EAAIoE,iBACtC,eAACvQ,EAAA,EAAD,CAAME,MAAI,EAAV,2CACiC,IAC9BiM,EAAIqE,aAAerE,EAAImF,sBAE1B,cAACtR,EAAA,EAAD,CAAME,MAAI,EAAV,SACGiM,EAAIa,UAAU1D,KAAI,SAAC2D,GAAD,OACjB,cAACC,GAAA,EAAD,CAAMhK,MAAO+J,EAAO3M,MAAO,CAAEgB,YAAa,iBAIhD,eAACtB,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASkI,GAAI,EAA5C,UACE,cAACrI,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC9F,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNF,UAAWX,EAAQwM,YACnB1L,QAAS,kBAvGAV,EAuGkB,qBAAD,OAAsBoK,EAAIsB,UAtG9D7L,EAAQM,KAAKH,GADK,IAACA,GAmGX,iCASF,cAAC/B,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR4B,UAAWX,EAAQwM,YACnB1L,QAAS,WACPyO,GAAc,IAEhB5Q,MAAO,CACLuO,WAAY,UACZrM,MAAO,QARX,8BAcF,cAACxC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNF,UAAWX,EAAQwM,YACnB1L,QAAS,WACP2J,GAAQ,IALZ,gCAaN,cAACe,GAAA,EAAD,CAAOjG,KAAMA,EAAMkG,QAASb,EAAajK,UAAWX,EAAQqK,YAA5D,SACE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEkN,aAAc,QAAhD,2BAGA,eAACxN,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASkB,QAAS,EAA1C,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,kBAjJrBT,QAAQC,IAAIkK,EAAIsB,UAChBrG,IACGmK,OADH,UACaxM,EAAQK,KADrB,YAC6B+G,EAAIsB,KAAO,CACpCC,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBqJ,IACAvB,OAED5E,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,UAChBzB,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7B8H,QAsHM,sBASF,cAACvM,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,kBAAM8J,KAJjB,8BAYR,cAACY,GAAA,EAAD,CACEjG,KAAM+J,EACN7D,QAAS+D,EACT7O,UAAWX,EAAQqK,YAHrB,SAKE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEkN,aAAc,QAAhD,4BAGA,eAACxN,EAAA,EAAD,CACEC,WAAS,EACTE,UAAU,SACVoB,QAAS,EACTjB,MAAO,CAAEwL,OAAQ,QAJnB,UAME,cAAC9L,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,uBACNG,KAAK,iBACLQ,MAAO8M,EAAWnE,SAASf,OAAO,EAAG,IACrC3H,SAAU,SAACJ,GACT6C,EAAY,WAAY7C,EAAMgB,OAAOb,QAEvCkN,gBAAiB,CACfC,QAAQ,GAEVtQ,QAAQ,WACRgP,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,+BACNG,KAAK,SACL3C,QAAQ,WACRmD,MAAO8M,EAAWJ,cAClBzM,SAAU,SAACJ,GACT6C,EAAY,gBAAiB7C,EAAMgB,OAAOb,QAE5C8E,WAAY,CAAEkI,WAAY,CAAEC,IAAK,IACjCpB,WAAS,MAGb,cAAC1P,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,sBACNG,KAAK,SACL3C,QAAQ,WACRmD,MAAO8M,EAAWH,aAClB1M,SAAU,SAACJ,GACT6C,EAAY,eAAgB7C,EAAMgB,OAAOb,QAE3C8E,WAAY,CAAEkI,WAAY,CAAEC,IAAK,IACjCpB,WAAS,SAIf,eAAC1P,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASkB,QAAS,EAA1C,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,WAhNrB2E,IACGkI,IADH,UACUvK,EAAQK,KADlB,YAC0B+G,EAAIsB,KAAOkD,EAAY,CAC7CjD,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBqJ,IACAqD,OAEDxJ,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,UAChBzB,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7B0M,QAsLM,sBASF,cAACnR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,kBAAM0O,KAJjB,kCAkGCK,GAlFA,SAAC9P,GAAW,IAAD,EACAiB,mBAAS,IADT,mBACjByC,EADiB,KACXyI,EADW,KAGlB/H,EAAWC,qBAAWC,IAC5B8B,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd,IACM2D,EADa,CAAC,YACaC,KAAK,KACtC1P,QAAQC,IAAIwP,GACZ,IAAI1D,EAAUhJ,EAAQK,KACF,KAAhBqM,IACF1D,EAAO,UAAMA,EAAN,YAAiB0D,IAG1BzP,QAAQC,IAAI8L,GACZ3G,IACG4G,IAAID,EAAS,CACZL,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBoG,EAAQtG,EAASE,SAElBE,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cAKjB,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTE,UAAU,SACVE,QAAQ,SACRD,WAAW,SALb,SAOE,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC5H,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAIJ,cAACV,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJmI,IAAE,EACFlI,UAAU,SACVC,WAAW,UACXC,QAAQ,SANV,SAQG+E,EAAK6F,OAAS,EACb7F,EAAKkE,KAAI,SAAC6C,GACR,OAAO,cAAC,GAAD,CAASA,IAAKA,EAAK2B,QAASA,OAGrC,cAACrN,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAE4N,UAAW,UAA7C,mC,UCxYNlN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJ6C,OAAQ,WAEV6F,YAAa,CACXxI,MAAO,OACP2C,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,SAChBmC,cAAe,aAEjBvC,aAAc,CACZtL,QAAS,OACTuL,OAAQ,SACRC,UAAW,aACXpG,MAAO,QAETqG,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,UAElB0F,OAAQ,CACNhM,MAAOzE,EAAMK,QAAQ,IACrB+G,OAAQpH,EAAMK,QAAQ,SAIpB8M,GAAkB,SAAC3M,GACvB,IAAMC,EAAUX,KACRsN,EAAyB5M,EAAzB4M,YAAaR,EAAYpM,EAAZoM,QACfhI,EAAWC,qBAAWC,IAHK,EAITrD,oBAAS,GAJA,mBAI1BuE,EAJ0B,KAIpBkF,EAJoB,KAM3BoC,EAAY,IAAI/B,KAAK6B,EAAYG,mBAMjCmD,EAES,UAFTA,EAGM,UAHNA,EAIM,UAJNA,EAMO,UANPA,EAOM,UAINC,EAAe,SAAChL,GACpB,IAAMkH,EAAO,UAAMhJ,EAAQM,aAAd,YAA8BiJ,EAAYb,KACjDqE,EAAa,CACjBjL,OAAQA,EACR8H,eAAe,IAAIlC,MAAOiE,eAE5BtJ,IACGkI,IAAIvB,EAAS+D,EAAY,CACxBpE,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBqJ,OAEDnG,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,cAIhBwK,EAAY,CAChBjD,QACE,qCACE,cAAC9O,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC9F,EAAA,EAAD,CACED,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAETC,QAAS,kBAAMoP,EAAa,gBAN9B,yBAWF,cAAC7R,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC9F,EAAA,EAAD,CACED,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAETC,QAAS,kBAAMoP,EAAa,aAN9B,yBAaN9C,YACE,qCACE,cAAC/O,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC9F,EAAA,EAAD,CACED,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAETC,QAAS,kBAAMoP,EAAa,aAN9B,sBAWF,cAAC7R,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC9F,EAAA,EAAD,CACED,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAETC,QAAS,kBAAMoP,EAAa,aAN9B,yBAaN5C,SACE,mCACE,cAACjP,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC3B,EAAA,EAAD,CACEpE,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAJX,0BAYNwM,SACE,mCACE,cAAChP,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC3B,EAAA,EAAD,CACEpE,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAJX,0BAYN2M,UACE,mCACE,cAACnP,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC3B,EAAA,EAAD,CACEpE,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAJX,2BAYN4M,SACE,mCACE,cAACpP,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC3B,EAAA,EAAD,CACEpE,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY+C,EACZpP,MAAO,WAJX,2BAcR,OACE,eAACkE,EAAA,EAAD,CAAOpE,UAAWX,EAAQkK,aAAclF,UAAW,EAAnD,UACE,eAAC3G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CACEE,MAAI,EACJmI,GAAI,EACJ/H,MAAO,CACLkI,QAAS,OACTyD,eAAgB,SAChB7L,WAAY,UANhB,SASE,cAAC4R,GAAA,EAAD,CACEC,IAAG,UAAKnN,GAAL,OAAcwJ,EAAY4D,aAAanI,SAC1CzH,UAAWX,EAAQgQ,WAGvB,eAAC3R,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,EAAG9G,QAAS,EAAGpB,UAAU,SAAlD,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACG4N,EAAY4D,aAAaxJ,SAG9B,cAAC1I,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyM,GAAA,EAAD,CACE9I,OACuC,IAArCyK,EAAY4D,aAAa5M,OACrBgJ,EAAY4D,aAAa5M,OACzB,KAENsD,UAAQ,MAGZ,eAAC5I,EAAA,EAAD,CAAME,MAAI,EAAV,yBAAwBsO,EAAU9B,wBAClC,eAAC1M,EAAA,EAAD,CAAME,MAAI,EAAV,uBACa,IACVoO,EAAY4D,aAAa9I,UACvBE,KAAI,SAACyG,GACJ,MAAM,GAAN,OAAUA,EAAItG,gBAAd,aAAkCsG,EAAIpG,UAAtC,YACEoG,EAAInG,QAAUmG,EAAInG,QAAU,UAD9B,QAID8H,KAAK,SAEV,eAAC1R,EAAA,EAAD,CAAME,MAAI,EAAV,kBAC4B,KAApBoO,EAAYjC,IAAaiC,EAAYjC,IAAM,mBAEnD,cAACrM,EAAA,EAAD,CAAME,MAAI,EAAV,SACGoO,EAAY4D,aAAarI,OAAOP,KAAI,SAAC2D,GAAD,OACnC,cAACC,GAAA,EAAD,CAAMhK,MAAO+J,EAAO3M,MAAO,CAAEgB,YAAa,iBAIhD,cAACtB,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASkI,GAAI,EAA5C,SACE,cAACrI,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACoI,IAAE,EAAvB,SACG0J,EAAUzD,EAAYzH,eAI7B,cAACsG,GAAA,EAAD,CAAOjG,KAAMA,EAAMkG,QA/NH,WAClBhB,GAAQ,IA8NmC9J,UAAWX,EAAQqK,YAA5D,SACE,cAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,SAWE,cAACmC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAHpB,4BA4IK4R,GA9HS,SAACzQ,GACvB,IAAMoE,EAAWC,qBAAWC,IADK,EAEOrD,mBAAS,IAFhB,mBAE1B0C,EAF0B,KAEZoK,EAFY,KAGzBF,EAAU6C,cAAV7C,MAHyB,EAIS5M,mBAAS,CACjDkE,OAAQ,CACNwL,KAAK,EACLvD,SAAS,EACTC,aAAa,GAEfuD,KAAM,CACJ,oBAAqB,CACnBzL,QAAQ,EACR0L,MAAM,GAER9D,kBAAmB,CACjB5H,QAAQ,EACR0L,MAAM,GAER,sBAAuB,CACrB1L,QAAQ,EACR0L,MAAM,MArBqB,mBAI1BC,EAJ0B,UA0BjC1K,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd,IAAI2E,EAAe,GAEfD,EAAc3L,OAAOoI,WACvBwD,EAAY,sBAAOA,GAAP,sBAEVD,EAAc3L,OAAOiI,UACvB2D,EAAY,sBAAOA,GAAP,qBAEVD,EAAc3L,OAAOkI,cACvB0D,EAAY,sBAAOA,GAAP,yBAGd,IAAIC,EAAM,GACRH,EAAO,GAETzL,OAAOC,KAAKyL,EAAcF,MAAMlH,SAAQ,SAACnE,GACvC,IAAM/G,EAAOsS,EAAcF,KAAKrL,GAC5B/G,EAAK2G,SACH3G,EAAKqS,KACPA,EAAI,sBAAOA,GAAP,gBAAqBtL,KAEzByL,EAAG,sBAAOA,GAAP,eAAmBzL,SAK5B,IAAMwK,GADNgB,EAAY,sBAAOA,GAAP,YAAwBC,GAAxB,YAAgCH,KACXb,KAAK,KACtC1P,QAAQC,IAAIwP,GACZ,IAAI1D,EAAO,UAAMhJ,EAAQS,WAAd,kBAAkC+J,GACzB,KAAhBkC,IACF1D,EAAO,UAAMA,EAAN,YAAiB0D,IAG1BzP,QAAQC,IAAI8L,GAEZ3G,IACG4G,IAAID,EAAS,CACZL,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBgI,EAAgBlI,EAASE,SAE1BE,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,UAEhBkI,EAAgB,IAChB3J,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,cAKnC,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,cAACV,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJmI,IAAE,EACFlI,UAAU,SACVG,MAAO,CAAEqF,MAAO,QAChBvF,WAAW,UACXC,QAAQ,SAPV,SASGgF,EAAa4F,OAAS,EACrB5F,EAAaiE,KAAI,SAACrC,GAAD,OACf,cAACjH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAiBoO,YAAarH,EAAK6G,QAASA,SAIhD,cAACrN,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAE4N,UAAW,UAA7C,2CCpZNlN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJ6C,OAAQ,WAEV6F,YAAa,CACXxI,MAAO,OACP2C,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,SAChBmC,cAAe,aAEjBvC,aAAc,CACZtL,QAAS,OACTuL,OAAQ,SACRC,UAAW,aACXpG,MAAO,QAETqG,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,UAElB0F,OAAQ,CACNhM,MAAOzE,EAAMK,QAAQ,IACrB+G,OAAQpH,EAAMK,QAAQ,SAIpB8M,GAAkB,SAAC3M,GACvB,IAAMC,EAAUX,KACRsN,EAAyB5M,EAAzB4M,YAAaR,EAAYpM,EAAZoM,QACfhI,EAAWC,qBAAWC,IAHK,EAITrD,oBAAS,GAJA,mBAI1BuE,EAJ0B,KAIpBkF,EAJoB,OAKGzJ,oBAAS,GALZ,mBAK1BgQ,EAL0B,KAKdC,EALc,OAMLjQ,mBAAS2L,EAAY4D,aAAa5M,QAN7B,mBAM1BA,EAN0B,KAMlBiJ,EANkB,KAQ3BC,EAAY,IAAI/B,KAAK6B,EAAYG,mBAuCjCoE,EAAoB,WACxBD,GAAc,IAmChB,OACE,eAAClM,EAAA,EAAD,CAAOpE,UAAWX,EAAQkK,aAAclF,UAAW,EAAnD,UACE,eAAC3G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CACEE,MAAI,EACJmI,GAAI,EACJ/H,MAAO,CACLkI,QAAS,OACTyD,eAAgB,SAChB7L,WAAY,UANhB,SASE,cAAC4R,GAAA,EAAD,CACEC,IAAG,UAAKnN,GAAL,OAAcwJ,EAAY4D,aAAanI,SAC1CzH,UAAWX,EAAQgQ,WAGvB,eAAC3R,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACmI,GAAI,EAAG9G,QAAS,EAAGpB,UAAU,SAAlD,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACG4N,EAAY4D,aAAaxJ,SAG9B,cAAC1I,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACyM,GAAA,EAAD,CACE9I,OACuC,IAArCyK,EAAY4D,aAAa5M,OACrBgJ,EAAY4D,aAAa5M,OACzB,KAENsD,UAAQ,MAGZ,eAAC5I,EAAA,EAAD,CAAME,MAAI,EAAV,wBAAuBoO,EAAYnC,IAAI3K,SACvC,eAACxB,EAAA,EAAD,CAAME,MAAI,EAAV,mBAAkBoO,EAAYnC,IAAIS,WAClC,eAAC5M,EAAA,EAAD,CAAME,MAAI,EAAV,yBAAwBsO,EAAU9B,wBAClC,eAAC1M,EAAA,EAAD,CAAME,MAAI,EAAV,kBAC4B,KAApBoO,EAAYjC,IAAaiC,EAAYjC,IAAM,mBAEnD,cAACrM,EAAA,EAAD,CAAME,MAAI,EAAV,SACGoO,EAAY4D,aAAarI,OAAOP,KAAI,SAAC2D,GAAD,OACnC,cAACC,GAAA,EAAD,CAAMhK,MAAO+J,EAAO3M,MAAO,CAAEgB,YAAa,iBAIhD,eAACtB,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASkI,GAAI,EAA5C,UACE,cAACrI,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACoI,IAAE,EAAvB,SACE,cAAC9F,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNF,UAAWX,EAAQwM,YACnB7N,MAAO,CACLuO,WAAY,WAEdpM,QAAS,WACPmQ,GAAc,IARlB,uBAcF,cAAC5S,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNF,UAAWX,EAAQwM,YACnB1L,QAAS,WACP2J,GAAQ,IALZ,oCAaN,cAACe,GAAA,EAAD,CAAOjG,KAAMA,EAAMkG,QAnHH,WAClBhB,GAAQ,IAkHmC9J,UAAWX,EAAQqK,YAA5D,SACE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACuM,GAAA,EAAD,CACEjE,KAAK,oBACLpI,MAAO,CAAEkN,aAAc,QACvB3J,OAAmB,IAAZyB,EAAgB,KAAOA,EAC9BxB,SAAU,SAACJ,EAAO2L,GAChBd,EAAUc,MAGd,cAAC9M,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,WA3KjB2E,IACGkI,IACCvK,EAAQO,OACR,CAAEA,OAAQA,EAAQwN,YAAaxE,EAAY4D,aAAaa,QACxD,CACErF,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAInDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS,gCAEXqJ,IACA1B,GAAQ,MAETzE,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,GACZ9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BqJ,IACA1B,GAAQ,OA2IN,yBAUJ,cAACe,GAAA,EAAD,CACEjG,KAAMyL,EACNvF,QAASyF,EACTvQ,UAAWX,EAAQqK,YAHrB,SAKE,eAACtF,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChBsB,SAAU,MACVnN,WAAY,UARhB,UAWE,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAEkN,aAAc,QAAhD,2BAGA,eAACxN,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASkB,QAAS,EAA1C,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,YACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,YAlKF,SAACoE,GACpB,IAAMkH,EAAO,UAAMhJ,EAAQM,aAAd,YAA8BiJ,EAAYb,KACjDqE,EAAa,CACjBjL,OAAQA,EACR8H,eAAe,IAAIlC,MAAOiE,eAE5BtJ,IACGkI,IAAIvB,EAAS+D,EAAY,CACxBpE,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBoO,IACA/E,OAEDnG,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,UAChBsL,OAuIUhB,CAAa,aALjB,mBAWF,cAAC7R,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqC,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,aAClBkC,QAAS,kBAAMoQ,KAJjB,kCAmICG,GAnHY,SAACtR,GAC1B,IAAMoE,EAAWC,qBAAWC,IADQ,EAEIrD,mBAAS,IAFb,mBAE7B0C,EAF6B,KAEfoK,EAFe,OAGM9M,mBAAS,CACjD2P,KAAM,CACJ,oBAAqB,CACnBzL,QAAQ,EACR0L,MAAM,GAER,YAAa,CACX1L,QAAQ,EACR0L,MAAM,GAER5D,cAAe,CACb9H,QAAQ,EACR0L,MAAM,GAER,sBAAuB,CACrB1L,QAAQ,EACR0L,MAAM,MAnBwB,mBAG7BC,EAH6B,UAwBpC1K,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd,IAAI2E,EAAe,GACnBA,EAAY,sBAAOA,GAAP,qBAEZ,IAAIC,EAAM,GACRH,EAAO,GAETzL,OAAOC,KAAKyL,EAAcF,MAAMlH,SAAQ,SAACnE,GACvC,IAAM/G,EAAOsS,EAAcF,KAAKrL,GAC5B/G,EAAK2G,SACH3G,EAAKqS,KACPA,EAAI,sBAAOA,GAAP,gBAAqBtL,KAEzByL,EAAG,sBAAOA,GAAP,eAAmBzL,SAM5B,IAAMwK,GADNgB,EAAY,sBAAOA,GAAP,YAAwBC,GAAxB,YAAgCH,KACXb,KAAK,KACtC1P,QAAQC,IAAIwP,GACZ,IAAI1D,EAAO,UAAMhJ,EAAQS,YACL,KAAhBiM,IACF1D,EAAO,UAAMA,EAAN,YAAiB0D,IAG1BzP,QAAQC,IAAI8L,GAEZ3G,IACG4G,IAAID,EAAS,CACZL,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBgI,EAAgBlI,EAASE,SAE1BE,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,UAChBkI,EAAgB,IAChB3J,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,cAKnC,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAEF,cAACV,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJmI,IAAE,EACFlI,UAAU,SACVG,MAAO,CAAEqF,MAAO,QAChBvF,WAAW,UACXC,QAAQ,SAPV,SASGgF,EAAa4F,OAAS,EACrB5F,EAAaiE,KAAI,SAACrC,GAAD,OACf,cAACjH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,GAAD,CAAiBoO,YAAarH,EAAK6G,QAASA,SAIhD,cAACrN,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAO,CAAE4N,UAAW,UAA7C,2CCrXNlN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJ6C,OAAQ,WAEV0D,YAAa,CACX1D,OAAQ,OACRE,QAAS,OACTpI,WAAY,SACZ6L,eAAgB,cA+KL2D,GA1KC,SAAClO,GACf,IAAMC,EAAUX,KACV8E,EAAWC,qBAAWC,IAFH,EAImBrD,mBAAS,CACnD+F,KAAM,GACNsB,IAAK,GACLC,cAAe,KAPQ,mBAIlB4F,EAJkB,KAIFC,EAJE,OAUCnN,mBAAS,IAVV,mBAUlByH,EAVkB,KAUXC,EAVW,KAYnB9D,EAAc,SAACC,EAAK3C,GACxBiM,EAAkB,2BACbD,GADY,kBAEdrJ,EAAM3C,MAIXiE,qBAAU,WACRgG,MACC,IAEH,IAAMA,EAAU,WACd1G,IACG4G,IAAIjJ,EAAQQ,KAAM,CACjBmI,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLvF,QAAQC,IAAIsF,EAASE,MACrBqI,EAAkBvI,EAASE,MAC3B4C,EAAS9C,EAASE,KAAKwC,kBAExBtC,OAAM,SAACC,GACN5F,QAAQC,IAAI2F,EAAIL,SAASE,MACzB3B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAAS,cA6CjB,OACE,mCACE,eAACzE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,UAAU,SACVC,WAAW,SACXE,MAAO,CAAEC,QAAS,OAAQC,UAAW,QALvC,UAOE,cAACR,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEF,cAACV,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAC/H,MAAO,CAAEqF,MAAO,QAA9B,SACE,eAACe,EAAA,EAAD,CACEpG,MAAO,CACLC,QAAS,OACT8M,QAAS,OACT7E,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChB7L,WAAY,UAPhB,UAWE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASC,WAAW,UAAUmB,QAAS,EAAjE,UACE,cAACvB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,OACNW,MAAOgM,EAAenH,KACtB5E,SAAU,SAACJ,GAAD,OAAW6C,EAAY,OAAQ7C,EAAMgB,OAAOb,QACtDvB,UAAWX,EAAQ+D,SACnBhF,QAAQ,WACRgP,WAAS,EACTpP,MAAO,CAAEqF,MAAO,YAGpB,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACqE,EAAA,EAAD,CACErB,MAAM,uBACN0H,WAAS,EACTC,KAAM,EACNvK,MAAO,CAAEqF,MAAO,QAChBjF,QAAQ,WACRmD,MAAOgM,EAAe7F,IACtBlG,SAAU,SAACJ,GAEPA,EAAMgB,OAAOb,MAAMiH,MAAM,KAAKC,QAAO,SAAUC,GAC7C,MAAa,KAANA,KACNC,QAAU,KAEb1E,EAAY,MAAO7C,EAAMgB,OAAOb,YAKxC,cAAC7D,EAAA,EAAD,CACEE,MAAI,EACJI,MAAO,CACLkI,QAAS,OACTyD,eAAgB,UAJpB,SAOE,cAAC,KAAD,CACEf,QAAS,KACTrH,MAAOuG,EACPtG,SAAU,SAACsG,GAAD,OAAWC,EAASD,IAC9B9J,MAAO,CAAEqF,MAAO,eAItB,cAACpD,EAAA,EAAD,CACE7B,QAAQ,YACR8B,MAAM,UACNlC,MAAO,CAAEC,QAAS,YAAa0I,UAAW,QAC1CxG,QAAS,kBAlHA,WACnB,IAAI6I,EAAc,eACbuE,GAGHvE,EADY,KAAVlB,EACY,2BACTyF,GADS,IAEZ5F,cAAc,IAAD,OAAMG,KAGP,2BACTyF,GADS,IAEZ5F,cAAe,KAInB7C,IACGkI,IAAIvK,EAAQQ,KAAM+F,EAAgB,CACjCoC,QAAS,CACPC,cAAc,UAAD,OAAY9M,aAAaC,QAAQ,aAGjDwG,MAAK,SAACC,GACLzB,EAAS,CACPoB,MAAM,EACNC,SAAU,UACV1C,QAAS8C,EAASE,KAAKhD,UAEzBqJ,OAEDnG,OAAM,SAACC,GACN9B,EAAS,CACPoB,MAAM,EACNC,SAAU,QACV1C,QAASmD,EAAIL,SAASE,KAAKhD,UAE7BzC,QAAQC,IAAI2F,EAAIL,aA8EK8I,IAJjB,uC,oBCtKG4C,GAhBM,SAACvR,GACpB,IAAM6K,EAAc,SAAC2G,GACJ,cAAXA,GAGJxR,EAAM0K,SAAQ,IAEhB,OACE,cAAC+G,GAAA,EAAD,CAAUjM,KAAMxF,EAAMwF,KAAMkG,QAASb,EAAa6G,iBAAkB,IAApE,SACE,cAACC,GAAA,EAAD,CAAOjG,QAASb,EAAapF,SAAUzF,EAAMyF,SAA7C,SACGzF,EAAM+C,aCOTzD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCuE,KAAM,CACJ+C,QAAS,OACT8E,cAAe,SACfrB,eAAgB,SAChB7L,WAAY,SACZI,UAAW,OACX8S,WAAY,OACZvH,UAAW,aACXpG,MAAO,YAIEK,GAAkBuN,0BA6EhBC,OA3Ef,WACE,IAAM7R,EAAUX,KADH,EAEa2B,mBAAS,CACjCuE,MAAM,EACNC,SAAU,GACV1C,QAAS,KALE,mBAENgP,EAFM,KAEC3N,EAFD,KAOb,OACE,cAAC,IAAD,UACE,eAACE,GAAgB0N,SAAjB,CAA0B7P,MAAOiC,EAAjC,UACE,eAAC9F,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAA1B,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAACmI,IAAE,EAAb,SACE,cAAC,EAAD,MAEF,cAACrI,EAAA,EAAD,CAAME,MAAI,EAACoC,UAAWX,EAAQ8D,KAA9B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkO,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACkB,cAAfhT,IACC,cAAC,GAAD,IAEA,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAO+S,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,2BAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,cAKR,cAAC,GAAD,CACE1M,KAAMuM,EAAMvM,KACZkF,QAAS,SAACvF,GAAD,OACPf,EAAS,2BACJ2N,GADG,IAENvM,KAAML,MAGVM,SAAUsM,EAAMtM,SAChB1C,QAASgP,EAAMhP,gBC3FVqP,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1M,MAAK,YAAkD,IAA/C2M,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.51b9f20d.chunk.js","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ErrorPage = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Error 404</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","const isAuth = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const userType = () => {\r\n  return localStorage.getItem(\"type\");\r\n};\r\n\r\nexport default isAuth;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport isAuth, { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleClick = (location) => {\r\n    console.log(location);\r\n    history.push(location);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Job Portal\r\n        </Typography>\r\n        {isAuth() ? (\r\n          userType() === \"recruiter\" ? (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\r\n                Add Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\r\n                My Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\r\n                Employees\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => handleClick(\"/applications\")}\r\n              >\r\n                Applications\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/login\")}>\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/signup\")}>\r\n              Signup\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst PasswordInput = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\r\n        <InputLabel htmlFor=\"outlined-adornment-password\">\r\n          {props.label}\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={handleShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          value={props.value}\r\n          onChange={(event) => props.onChange(event)}\r\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\r\n          className={props.className}\r\n          onBlur={props.onBlur ? props.onBlur : null}\r\n        />\r\n        {props.helperText ? (\r\n          <FormHelperText>{props.helperText}</FormHelperText>\r\n        ) : null}\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nconst EmailInput = (props) => {\r\n  const {\r\n    label,\r\n    value,\r\n    onChange,\r\n    inputErrorHandler,\r\n    handleInputError,\r\n    required,\r\n    className,\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      variant=\"outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={inputErrorHandler.email.message}\r\n      onBlur={(event) => {\r\n        if (event.target.value === \"\") {\r\n          if (required) {\r\n            handleInputError(\"email\", true, \"Email is required\");\r\n          } else {\r\n            handleInputError(\"email\", false, \"\");\r\n          }\r\n        } else {\r\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (re.test(String(event.target.value).toLowerCase())) {\r\n            handleInputError(\"email\", false, \"\");\r\n          } else {\r\n            handleInputError(\"email\", true, \"Incorrect email format\");\r\n          }\r\n        }\r\n      }}\r\n      error={inputErrorHandler.email.error}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n","export const server = \"http://localhost:4444\";\r\n\r\nconst apiList = {\r\n  login: `${server}/auth/login`,\r\n  signup: `${server}/auth/signup`,\r\n  uploadResume: `${server}/upload/resume`,\r\n  uploadProfileImage: `${server}/upload/profile`,\r\n  jobs: `${server}/api/jobs`,\r\n  applications: `${server}/api/applications`,\r\n  rating: `${server}/api/rating`,\r\n  user: `${server}/api/user`,\r\n  applicants: `${server}/api/applicants`,\r\n};\r\n\r\nexport default apiList;\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"300px\",\r\n  },\r\n  submitButton: {\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setLoginDetails({\r\n      ...loginDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\r\n      return inputErrorHandler[obj].error;\r\n    });\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.login, loginDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Login\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={loginDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleLogin()}\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst Logout = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"type\");\r\n    setPopup({\r\n      open: true,\r\n      severity: \"success\",\r\n      message: \"Logged out successfully\",\r\n    });\r\n  }, []);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import { useState} from \"react\";\r\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\n\r\n\r\nconst FileUploadInput = (props) => {\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const handleUpload = () => {\r\n    console.log(file);\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\r\n      <Grid container item xs={12} spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {props.icon}\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                console.log(event.target.files);\r\n                setUploadPercentage(0);\r\n                setFile(event.target.files[0]);\r\n              }}\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label={props.label}\r\n            value={file ? file.name || \"\" : \"\"}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            onClick={() => handleUpload()}\r\n            disabled={file ? false : true}\r\n          >\r\n            <CloudUpload />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {uploadPercentage !== 0 ? (\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FileUploadInput;\r\n","import { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase()} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    console.log(updatedDetails);\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n !== \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phone}\r\n                onChange={(phone) => setPhone(phone)}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  const { job } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [sop, setSop] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSop(\"\");\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.log(job._id);\r\n    console.log(sop);\r\n    axios\r\n      .post(\r\n        `${apiList.jobs}/${job._id}/applications`,\r\n        {\r\n          sop: sop,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const deadline = new Date(job.deadline).toLocaleDateString();\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\r\n          <Grid item>Application Deadline : {deadline}</Grid>\r\n\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            disabled={userType() === \"recruiter\"}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"50%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Write SOP (upto 250 words)\"\r\n            multiline\r\n            rows={8}\r\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            value={sop}\r\n            onChange={(event) => {\r\n              if (\r\n                event.target.value.split(\" \").filter(function (n) {\r\n                  return n !== \"\";\r\n                }).length <= 250\r\n              ) {\r\n                setSop(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => handleApply()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\nconst Home = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let address = apiList.jobs;\r\n    address = `${address}`;\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(\r\n          response.data.filter((obj) => {\r\n            const today = new Date();\r\n            const deadline = new Date(obj.deadline);\r\n            return deadline > today;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">Jobs</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = () => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <MultifieldInput\r\n                education={education}\r\n                setEducation={setEducation}\r\n              />\r\n              <Grid item>\r\n                <ChipInput\r\n                  className={classes.inputBox}\r\n                  label=\"Skills\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Press enter to add skills\"\r\n                  value={profileDetails.skills}\r\n                  onAdd={(chip) =>\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: [...profileDetails.skills, chip],\r\n                    })\r\n                  }\r\n                  onDelete={(chip, index) => {\r\n                    let skills = profileDetails.skills;\r\n                    skills.splice(index, 1);\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: skills,\r\n                    });\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Resume (.pdf)\"\r\n                  icon={<DescriptionIcon />}\r\n                  uploadTo={apiList.uploadResume}\r\n                  handleInput={handleInput}\r\n                  identifier={\"resume\"}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Profile Photo (.jpg/.png)\"\r\n                  icon={<FaceIcon />}\r\n                  uploadTo={apiList.uploadProfileImage}\r\n                  handleInput={handleInput}\r\n                  identifier={\"profile\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst CreateJobs = () => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [jobDetails, setJobDetails] = useState({\r\n    title: \"\",\r\n    maxApplicants: 100,\r\n    maxPositions: 30,\r\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n      .toISOString(),\r\n    skillsets: [],\r\n    jobType: \"Full Time\",\r\n    duration: 0,\r\n    salary: 0,\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(jobDetails);\r\n    axios\r\n      .post(apiList.jobs, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        setJobDetails({\r\n          title: \"\",\r\n          maxApplicants: 100,\r\n          maxPositions: 30,\r\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n            .toISOString(),\r\n          skillsets: [],\r\n          jobType: \"Full Time\",\r\n          duration: 0,\r\n          salary: 0,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Add Job</Typography>\r\n        </Grid>\r\n        <Grid item container xs direction=\"column\" justify=\"center\">\r\n          <Grid item>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    value={jobDetails.title}\r\n                    onChange={(event) =>\r\n                      handleInput(\"title\", event.target.value)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Press enter to add skills\"\r\n                    value={jobDetails.skillsets}\r\n                    onAdd={(chip) =>\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: [...jobDetails.skillsets, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skillsets = jobDetails.skillsets;\r\n                      skillsets.splice(index, 1);\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: skillsets,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Job Type\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.jobType}\r\n                    onChange={(event) => {\r\n                      handleInput(\"jobType\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\r\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\r\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Duration\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.duration}\r\n                    onChange={(event) => {\r\n                      handleInput(\"duration\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value={0}>Flexible</MenuItem>\r\n                    <MenuItem value={1}>1 Month</MenuItem>\r\n                    <MenuItem value={2}>2 Months</MenuItem>\r\n                    <MenuItem value={3}>3 Months</MenuItem>\r\n                    <MenuItem value={4}>4 Months</MenuItem>\r\n                    <MenuItem value={5}>5 Months</MenuItem>\r\n                    <MenuItem value={6}>6 Months</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Salary\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.salary}\r\n                    onChange={(event) => {\r\n                      handleInput(\"salary\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 0 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Application Deadline\"\r\n                    type=\"datetime-local\"\r\n                    value={jobDetails.deadline}\r\n                    onChange={(event) => {\r\n                      handleInput(\"deadline\", event.target.value);\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Maximum Number Of Applicants\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxApplicants}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxApplicants\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Positions Available\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxPositions}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxPositions\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Create Job\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { job, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [jobDetails, setJobDetails] = useState(job);\r\n\r\n  console.log(jobDetails);\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (location) => {\r\n    history.push(location);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(job._id);\r\n    axios\r\n      .delete(`${apiList.jobs}/${job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const handleJobUpdate = () => {\r\n    axios\r\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleCloseUpdate();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleCloseUpdate();\r\n      });\r\n  };\r\n\r\n  const postedOn = new Date(job.dateOfPosting);\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\r\n          <Grid item>\r\n            Remaining Number of Positions:{\" \"}\r\n            {job.maxPositions - job.acceptedCandidates}\r\n          </Grid>\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\r\n            >\r\n              View Applications\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpenUpdate(true);\r\n              }}\r\n              style={{\r\n                background: \"#FC7A1E\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Delete Job\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleDelete()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleClose()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Update Details\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={3}\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Application Deadline\"\r\n                type=\"datetime-local\"\r\n                value={jobDetails.deadline.substr(0, 16)}\r\n                onChange={(event) => {\r\n                  handleInput(\"deadline\", event.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Maximum Number Of Applicants\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxApplicants}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxApplicants\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Positions Available\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxPositions}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxPositions\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleJobUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseUpdate()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst MyJobs = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [`myjobs=1`];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">My Jobs</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} getData={getData} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Modal,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Modal,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item container xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        setPhone(response.data.contactNumber);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs style={{ width: \"100%\" }}>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              //   width: \"60%\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Bio (upto 250 words)\"\r\n                  multiline\r\n                  rows={8}\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"outlined\"\r\n                  value={profileDetails.bio}\r\n                  onChange={(event) => {\r\n                    if (\r\n                      event.target.value.split(\" \").filter(function (n) {\r\n                        return n !== \"\";\r\n                      }).length <= 250\r\n                    ) {\r\n                      handleInput(\"bio\", event.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  value={phone}\r\n                  onChange={(phone) => setPhone(phone)}\r\n                  style={{ width: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Snackbar} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n","import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\nimport { userType } from \"./lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}